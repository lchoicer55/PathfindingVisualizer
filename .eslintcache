[{"/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/index.js":"1","/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/reportWebVitals.js":"2","/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/PathfindingVisualizer/PathfindingVisualizer.jsx":"3","/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/PathfindingVisualizer/Node/Node.jsx":"4","/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingVisualizer/pathfindingVisualizer.jsx":"5","/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingVisualizer/navbar.jsx":"6","/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingAlgorithms/dijkstra.js":"7","/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingAlgorithms/randomWalk.js":"8","/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingAlgorithms/astar.js":"9","/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/mazeAlgorithms/randomMaze.js":"10","/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/mazeAlgorithms/verticalMaze.js":"11","/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingAlgorithms/breadthFirstSearch.js":"12","/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingAlgorithms/greedyBestFirstSearch.js":"13","/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/mazeAlgorithms/recursiveDivision.js":"14","/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingAlgorithms/depthFirstSearch.js":"15","/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingAlgorithms/bidirectionalGreedySearch.js":"16","/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingVisualizer/Node/node.jsx":"17","/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/mazeAlgorithms/horizontalMaze.js":"18","/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/serviceWorker.js":"19"},{"size":659,"mtime":1610600265262,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1610567799768,"results":"22","hashOfConfig":"23"},{"size":4202,"mtime":1610572493185,"results":"24","hashOfConfig":"23"},{"size":682,"mtime":1610572356113,"results":"25","hashOfConfig":"23"},{"size":23295,"mtime":1610672793835,"results":"26","hashOfConfig":"21"},{"size":9917,"mtime":1610672793831,"results":"27","hashOfConfig":"21"},{"size":1881,"mtime":1610599789440,"results":"28","hashOfConfig":"21"},{"size":2100,"mtime":1610599789456,"results":"29","hashOfConfig":"21"},{"size":2441,"mtime":1610599789425,"results":"30","hashOfConfig":"21"},{"size":561,"mtime":1610599722266,"results":"31","hashOfConfig":"21"},{"size":1381,"mtime":1610599722274,"results":"32","hashOfConfig":"21"},{"size":1801,"mtime":1610599789433,"results":"33","hashOfConfig":"21"},{"size":2400,"mtime":1610599789448,"results":"34","hashOfConfig":"21"},{"size":3267,"mtime":1610599722270,"results":"35","hashOfConfig":"21"},{"size":1494,"mtime":1610599789436,"results":"36","hashOfConfig":"21"},{"size":4969,"mtime":1610599789429,"results":"37","hashOfConfig":"21"},{"size":1463,"mtime":1610599822703,"results":"38","hashOfConfig":"21"},{"size":1383,"mtime":1610599722263,"results":"39","hashOfConfig":"21"},{"size":5086,"mtime":1610600488000,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1953c0z",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1yp20m5",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/index.js",[],["82","83"],"/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/reportWebVitals.js",[],["84","85"],"/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/PathfindingVisualizer/PathfindingVisualizer.jsx",[],"/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/PathfindingVisualizer/Node/Node.jsx",[],"/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingVisualizer/pathfindingVisualizer.jsx",[],"/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingVisualizer/navbar.jsx",["86"],"import React, { Component } from \"react\";\nimport \"./navbar.css\";\nimport Button from 'react-bootstrap/Button';\n\nconst brand = window.innerWidth > 600 ? \"Pathfinding Visualizer\" : \"Pathfinder\";\n\nclass NavBar extends Component {\n  state = {\n    algorithm: \"Visualize Dijkstra\",\n    maze: \"Generate Random Maze\",\n    pathState: false,\n    mazeState: false,\n    speedState: \"Speed\",\n  };\n\n  selectAlgorithm(selection) {\n    if (this.props.visualizingAlgorithm) {\n      return;\n    }\n    if (\n      selection === this.state.algorithm ||\n      this.state.algorithm === \"Visualize Algorithm\" ||\n      this.state.algorithm === \"Select an Algorithm!\"\n    ) {\n      this.setState({ algorithm: selection });\n    } else if (this.state.pathState) {\n      this.clearPath();\n      this.setState({ algorithm: selection });\n    } else {\n      this.setState({ algorithm: selection });\n    }\n  }\n\n  selectMaze(selection) {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n    if (\n      selection === this.state.maze ||\n      this.state.maze === \"Generate Maze\" ||\n      this.state.maze === \"Select a Maze!\"\n    ) {\n      this.setState({ maze: selection });\n    } else if (!this.state.mazeState) {\n      this.setState({ maze: selection });\n    } else {\n      this.clearGrid();\n      this.setState({ maze: selection });\n    }\n  }\n\n  visualizeAlgorithm() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n    if (this.state.pathState) {\n      this.clearTemp();\n      return;\n    }\n    if (\n      this.state.algorithm === \"Visualize Algorithm\" ||\n      this.state.algorithm === \"Select an Algorithm!\"\n    ) {\n      this.setState({ algorithm: \"Select an Algorithm!\" });\n    } else {\n      this.setState({ pathState: true });\n      if (this.state.algorithm === \"Visualize Dijkstra\")\n        this.props.visualizeDijkstra();\n      else if (this.state.algorithm === \"Visualize A*\")\n        this.props.visualizeAStar();\n      else if (this.state.algorithm === \"Visualize Greedy BFS\")\n        this.props.visualizeGreedyBFS();\n      else if (this.state.algorithm === \"Visualize Bidirectional Greedy\")\n        this.props.visualizeBidirectionalGreedySearch();\n      else if (this.state.algorithm === \"Visualize Breadth First Search\")\n        this.props.visualizeBFS();\n      else if (this.state.algorithm === \"Visualize Depth First Search\")\n        this.props.visualizeDFS();\n      else if (this.state.algorithm === \"Visualize Random Walk\")\n        this.props.visualizeRandomWalk();\n    }\n  }\n\n  generateMaze() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n    if (this.state.mazeState || this.state.pathState) {\n      this.clearTemp();\n    }\n    if (\n      this.state.maze === \"Generate Maze\" ||\n      this.state.maze === \"Select a Maze!\"\n    ) {\n      this.setState({ maze: \"Select a Maze!\" });\n    } else {\n      this.setState({ mazeState: true });\n      if (this.state.maze === \"Generate Random Maze\")\n        this.props.generateRandomMaze();\n      else if (this.state.maze === \"Generate Recursive Maze\")\n        this.props.generateRecursiveDivisionMaze();\n      else if (this.state.maze === \"Generate Vertical Maze\")\n        this.props.generateVerticalMaze();\n      else if (this.state.maze === \"Generate Horizontal Maze\")\n        this.props.generateHorizontalMaze();\n    }\n  }\n\n  clearGrid() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n    this.props.clearGrid();\n    this.setState({\n      algorithm: \"Visualize Algorithm\",\n      maze: \"Generate Maze\",\n      pathState: false,\n      mazeState: false,\n    });\n  }\n\n  clearPath() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n    this.props.clearPath();\n    this.setState({\n      pathState: false,\n      mazeState: false,\n    });\n  }\n\n  clearTemp() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n    this.props.clearGrid();\n    this.setState({\n      pathState: false,\n      mazeState: false,\n    });\n  }\n\n  changeSpeed(speed) {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n    let value = [10, 10];\n    if (speed === \"Slow\") value = [50, 30];\n    else if (speed === \"Medium\") value = [25, 20];\n    else if (speed === \"Fast\") value = [10, 10];\n    this.setState({ speedState: speed });\n    this.props.updateSpeed(value[0], value[1]);\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a className=\"navbar-brand h1 mb-0\">\n          {brand}\n        </a>\n        <div className=\"navbar-collapse\" id=\"navbarNavDropdown\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item dropdown\">\n              <div className=\"dropdown\">\n                <button\n                  className=\"btn btn-light dropdown-toggle\"\n                  type=\"button\"\n                  id=\"dropdownMenu1\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  Algorithms\n                </button>\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n                  <button\n                    className=\"dropdown-item btn-light\"\n                    type=\"button\"\n                    onClick={() => this.selectAlgorithm(\"Visualize Dijkstra\")}\n                  >\n                    Dijkstra's Algorithm\n                  </button>\n                  <button className=\"dropdown-item btn-light\" type=\"button\" onClick={() => this.selectAlgorithm(\"Visualize A*\")}>\n                    A* Algorithm\n                  </button>\n                  <button className=\"dropdown-item btn-light\" type=\"button\" onClick={() => this.selectAlgorithm(\"Visualize Greedy BFS\")}>\n                    Greedy Best First Search\n                  </button>\n                  <button\n                    className=\"dropdown-item btn-light\"\n                    type=\"button\"\n                    onClick={() =>\n                      this.selectAlgorithm(\"Visualize Bidirectional Greedy\")\n                    }\n                  >\n                    Bidirectional Greedy Search\n                  </button>\n                  <div className=\"dropdown-divider\"></div>\n                  <button\n                    className=\"dropdown-item btn-light\"\n                    type=\"button\"\n                    onClick={() =>\n                      this.selectAlgorithm(\"Visualize Breadth First Search\")\n                    }\n                  >\n                    Breadth First Search\n                  </button>\n                  <button\n                    className=\"dropdown-item btn-light\"\n                    type=\"button\"\n                    onClick={() =>\n                      this.selectAlgorithm(\"Visualize Depth First Search\")\n                    }\n                  >\n                    Depth First Search\n                  </button>\n                  <button\n                    className=\"dropdown-item btn-light\"\n                    type=\"button\"\n                    onClick={() =>\n                      this.selectAlgorithm(\"Visualize Random Walk\")\n                    }\n                  >\n                    Random Walk\n                  </button>\n                </div>\n              </div>{\" \"}\n            </li>\n            <li>\n              <Button \n                variant=\"primary\"\n                className=\"btn\"\n                onClick={() => this.visualizeAlgorithm()}>\n                {this.state.algorithm}\n              </Button>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <div className=\"dropdown\">\n                <button\n                  className=\"btn btn-light dropdown-toggle\"\n                  type=\"button\"\n                  id=\"dropdownMenu1\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  Mazes\n                </button>\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n                  <button\n                    className=\"dropdown-item btn-light\"\n                    type=\"button\"\n                    onClick={() => this.selectMaze(\"Generate Random Maze\")}\n                  >\n                    Random Maze\n                  </button>\n                  <button\n                    className=\"dropdown-item btn-light\"\n                    type=\"button\"\n                    onClick={() => this.selectMaze(\"Generate Recursive Maze\")}\n                  >\n                    Recursive Division Maze\n                  </button>\n                  <button\n                    className=\"dropdown-item btn-light\"\n                    type=\"button\"\n                    onClick={() => this.selectMaze(\"Generate Vertical Maze\")}\n                  >\n                    Vertical Division Maze\n                  </button>\n                  <button\n                    className=\"dropdown-item btn-light\"\n                    type=\"button\"\n                    onClick={() => this.selectMaze(\"Generate Horizontal Maze\")}\n                  >\n                    Horizontal Division Maze\n                  </button>\n                </div>\n              </div>{\" \"}\n            </li>\n            <li>\n              <Button\n                variant=\"primary\"\n                className=\"btn\"\n                onClick={() => this.generateMaze()}>\n                {this.state.maze}\n              </Button>\n            </li>\n            <li>\n              <Button\n                variant=\"danger\"\n                className=\"btn\"\n                onClick={() => this.clearGrid()}>\n                  Clear Gird\n              </Button>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\nexport default NavBar;\n","/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingAlgorithms/dijkstra.js",[],"/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingAlgorithms/randomWalk.js",[],"/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingAlgorithms/astar.js",[],"/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/mazeAlgorithms/randomMaze.js",[],"/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/mazeAlgorithms/verticalMaze.js",[],"/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingAlgorithms/breadthFirstSearch.js",[],"/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingAlgorithms/greedyBestFirstSearch.js",[],"/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/mazeAlgorithms/recursiveDivision.js",[],"/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingAlgorithms/depthFirstSearch.js",[],"/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingAlgorithms/bidirectionalGreedySearch.js",[],"/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/pathfindingVisualizer/Node/node.jsx",[],"/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/mazeAlgorithms/horizontalMaze.js",[],"/Users/louischoicer/Documents/Python/pathfinding-visualizer/src/serviceWorker.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"91"},{"ruleId":"89","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":159,"column":9,"nodeType":"95","endLine":159,"endColumn":45},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],["96"],["97"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]